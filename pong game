import turtle

# Setting up the screen
gme = turtle.Screen() 
gme.title("Jijorz's Pong Game")
gme.bgcolor("blue")
gme.setup(width=800, height=600) #screen setting length
gme.tracer(0)  # Turns off the screen updates

#score_board
player_A=0
player_B=0
score_a=0
score_b=0

# left_paddle
left_paddle = turtle.Turtle()
left_paddle.speed(0) #hide speed
left_paddle.shape("square")
left_paddle.color("black")
left_paddle.shapesize(stretch_wid=6, stretch_len=1) 
left_paddle.penup() #line
left_paddle.goto(-350, 0) #placing left position

# right_paddle
right_paddle = turtle.Turtle()
right_paddle.speed(0)
right_paddle.shape("square")
right_paddle.color("black")
right_paddle.shapesize(stretch_wid=6, stretch_len=1)
right_paddle.penup()
right_paddle.goto(350, 0)

# Ball
ball = turtle.Turtle()
ball.speed(0)
ball.shape("circle")
ball.color("white")
ball.penup()
ball.goto(0, 0)
ball.dx = 0.55 # that is used for movent of balls speed in that paricular direction
ball.dy = -0.55

#score
scr=turtle.Turtle()
scr.speed(0) #to hide
scr.color("white")
scr.penup() 
scr.hideturtle() #for removing that arrow mark
scr.goto(0,260)
scr.write("Player A: 0   Player B: 0",align="center",font=("Ariel",20,"normal")) #score display

# Functions to move paddles
def left_paddle_up():
    y = left_paddle.ycor()
    left_paddle.sety(y + 20) #+20 in setiing sety as new  value

def left_paddle_down():
    y = left_paddle.ycor()
    left_paddle.sety(y - 20)

def paddle_b_up():
    y = right_paddle.ycor()
    right_paddle.sety(y + 20)

def paddle_b_down():
    y = right_paddle.ycor()
    right_paddle.sety(y - 20)

# Keyboard bindings
gme.listen()
gme.onkeypress(left_paddle_up, "w")
gme.onkeypress(left_paddle_down, "s")
gme.onkeypress(paddle_b_up, "Up")
gme.onkeypress(paddle_b_down, "Down")

# Main game loop
while True:
    gme.update()

    # Move the ball
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    # Border checking
    #top wall
    if ball.ycor() > 290:
        ball.sety(290)
        ball.dy *= -1

    #bottom wall
    if ball.ycor() < -290:
        ball.sety(-290)
        ball.dy *= -1

    #right wall
    if ball.xcor() > 390:
        ball.setx(390)
        ball.goto(0, 0)
        ball.dx *= -1
        score_a += 1 # when ballstriks inc a value 1
        scr.clear() #used for to avoid  overwriting the score number
        scr.write("Player A: {}   Player B: {}".format(score_a,score_b),align="center",font=("Ariel",20,"normal")) #that place holder funtion is used for {} that 2 vale score are changing in every min so for continous changing used placeholder and format


    #left wall
    if ball.xcor() < -390:
        ball.setx(390)
        ball.goto(0, 0)
        ball.dx *= -1
        score_b += 1
        scr.clear()
        scr.write("Player A: {}   Player B: {}".format(score_a,score_b),align="center",font=("Ariel",20,"normal"))


    # Paddle and ball collisions
    if (340 < ball.xcor() < 350) and (right_paddle.ycor() - 50 < ball.ycor() < right_paddle.ycor() + 50):
        ball.setx(340)
        ball.dx *= -1

    if (-350 < ball.xcor() < -340) and (left_paddle.ycor() - 50 < ball.ycor() < left_paddle.ycor() + 50):
        ball.setx(-340)
        ball.dx *= -1
